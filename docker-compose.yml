version: '3.4'

services:
  agreganews.collectnews.database:
    image: mongo
    container_name: AgregaNews.CollectNews.Database
    hostname: collectnewsdb
    ports:
      - "27017:27017"
    volumes:
      - ./.containers/collectnews/data/db:/data/db
    environment:
      MONGO_INITDB_ROOT_USERNAME: dbusername
      MONGO_INITDB_ROOT_PASSWORD: secret
    networks:
      - agreganewsnetwork

  agreganews.analyzenews.database:
    image: mongo
    container_name: AgregaNews.AnalyzeNews.Database
    hostname: analyzenewsdb
    ports:
      - "27018:27017"
    volumes:
      - ./.containers/analyzenews/data/db:/data/db
    environment:
      MONGO_INITDB_ROOT_USERNAME: dbusername
      MONGO_INITDB_ROOT_PASSWORD: secret
    networks:
      - agreganewsnetwork

  agreganews.log.database:
    image: mongo
    container_name: AgregaNews.Log.Database
    hostname: logsdb
    ports:
      - "27019:27017"
    volumes:
      - ./.containers/logs/data/db:/data/db
    environment:
      MONGO_INITDB_ROOT_USERNAME: dbusername
      MONGO_INITDB_ROOT_PASSWORD: secret
    networks:
      - agreganewsnetwork

  agreganews.rabbitmq:
    image: rabbitmq:3.11.7-management
    container_name: AgregaNews.Queue
    hostname: agreganews-queue
    volumes:
      - ./.containers/queue/data/:/var/lib/rabbitmq
      - ./.containers/queue/log/:/var/log/rabbitmq
    environment:
      RABBITMQ_DEFAULT_USER: mq_user
      RABBITMQ_DEFAULT_PASS: secret
    ports:
      - 25672:25672
      - 15672:15672
      - 5672:5672
    networks:
      - agreganewsnetwork

  agreganews.collectnews.api:
    depends_on:
      - agreganews.collectnews.database
      - agreganews.rabbitmq
    image: ${DOCKER_REGISTRY-}agreganewscollectnewsapi
    container_name: AgregaNews.CollectNews.Api
    build:
      context: .
      dockerfile: CollectNews/source/AgregaNews.CollectNews.Api/Dockerfile
    ports:
      - "5100:8080"
      - "5101:8081"
    environment:
      - ASPNETCORE_ENVIRONMENT=Development
      - ASPNETCORE_HTTP_PORTS=8080
    networks:
      - agreganewsnetwork

  agreganews.analyzenews.api:
    depends_on:
      - agreganews.analyzenews.database
      - agreganews.rabbitmq
    image: ${DOCKER_REGISTRY-}agreganewsanalyzenewsapi
    container_name: AgregaNews.AnalyzeNews.Api
    build:
      context: .
      dockerfile: AnalyzeNews/source/AgregaNews.AnalyzeNews.Api/Dockerfile
    ports:
      - "5200:8080"
      - "5201:8081"
    environment:
      - ASPNETCORE_ENVIRONMENT=Development
      - ASPNETCORE_HTTP_PORTS=8080
    networks:
      - agreganewsnetwork

  agreganews.log.api:
    depends_on:
      - agreganews.log.database
      - agreganews.rabbitmq
    image: ${DOCKER_REGISTRY-}agreganewslogapi
    container_name: AgregaNews.Log.Api
    build:
      context: .
      dockerfile: LogService/source/AgregaNews.Log.LogApi/Dockerfile
    ports:
      - "5300:8080"
      - "5301:8081"
    environment:
      - ASPNETCORE_ENVIRONMENT=Development
      - ASPNETCORE_HTTP_PORTS=8080
    networks:
      - agreganewsnetwork

  agreganews.getway.api:
    depends_on:
      - agreganews.analyzenews.api
      - agreganews.collectnews.api
    image: ${DOCKER_REGISTRY-}agreganewsgatwayapi
    container_name: AgregaNews.GatwayApi
    build:
      context: .
      dockerfile: Gatway/source/AgregaNews.GatwayApi/Dockerfile
    ports:
      - "5000:8080"
      - "5001:8081"
    environment:
      - ASPNETCORE_ENVIRONMENT=Development
      - ASPNETCORE_HTTP_PORTS=8080
    networks:
      - agreganewsnetwork

networks:
  agreganewsnetwork:
    name: agreganewsnetwork
    driver: bridge
